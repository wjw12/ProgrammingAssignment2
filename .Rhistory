x<- Sys.time()
x
names(Sys)
names("Sys")
names(x)
names(unclass(x))
unclass(x)
x
z<- as.POSIXlt(x)
z
names(z)
unclass(z)
clear()
clear
pwd
pwd()
setwd("~/specdata")
setwd("~/")
?read.csv
a<- read.csv("specdata/001.csv")
a
?paste
?mean
character()
character(2)
as.character(1,length=3)
as.character(1,digits=3)
print(1,digits=3)
print("1“,digits=3)
()""
”
dir
dir()
f<-dir()
f
length(dir())
?dir
files <- list.files("~/specdata",full.names=TRUE)
files [[1]]
?mean
?sum
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
files <- list.files(directory,full.names=TRUE)
total=0
n=0
for (i in id) {
datalist[[i]]<- read.csv(files[[i]])
p <- datalist[[i]][[pollutant]]
p <- p[!is.na(p)]
total <- total + sum(p)
n<- n + length(p)
total/n
}
}
pollutantmean(specdata,nitrate)
"pollutantmean("specdata","nitrate")
pollutantmean("specdata","nitrate")
?list
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
files <- list.files(directory,full.names=TRUE)
total=0
n=0
datalist <- vector("list", length(id))
for (i in id) {
datalist[[i]]<- read.csv(files[[i]])
p <- datalist[[i]][[pollutant]]
p <- p[!is.na(p)]
total <- total + sum(p)
n<- n + length(p)
total/n
}
}
pollutantmean("specdata","nitrate")
pollutantmean("specdata","nitrate")
list.files("specdata",full.names=TRUE)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
files <- list.files(directory,full.names=TRUE)
total=0
n=0
datalist <- vector("list", 332)
for (i in id) {
datalist[[i]]<- read.csv(files[[i]])
p <- datalist[[i]][[pollutant]]
p <- p[!is.na(p)]
total <- total + sum(p)
n<- n + length(p)
total/n
}
}
pollutantmean("specdata","nitrate")
a<- pollutantmean("specdata","nitrate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
files <- list.files(directory,full.names=TRUE)
total=0
n=0
datalist <- vector("list", 332)
for (i in id) {
datalist[[i]]<- read.csv(files[[i]])
p <- datalist[[i]][[pollutant]]
p <- p[!is.na(p)]
total <- total + sum(p)
n<- n + length(p)
}
total/n
}
pollutantmean("specdata","nitrate")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
datalist
?vector
?data.frame
a<- data.frame(1:4,c("a","b"))
a
a<- data.frame(1:4,row.names=c("a","b"))
a<- data.frame(1:2,row.names=c("a","b"))
a
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
files <- list.files(directory)
nobs <- vector("integer",332)
datalist <- vector("list",332)
for (i in id ){
datalist[[i]]<-read.csv(files[[i]])
judge<- is.na(datalist[[i]][[sulfate]]) | is.na(datalist[[i]][[nitrate]])
if (!judge) nobs[i]<- datalist[[i]]
}
data.frame(id,nobs)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
files <- list.files(directory,full.names=TRUE)
nobs <- vector("integer",332)
datalist <- vector("list",332)
for (i in id ){
datalist[[i]]<-read.csv(files[[i]])
judge<- is.na(datalist[[i]][[sulfate]]) | is.na(datalist[[i]][[nitrate]])
if (!judge) nobs[i]<- datalist[[i]]
}
data.frame(id,nobs)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
files <- list.files(directory,full.names=TRUE)
nobs <- vector("integer",332)
datalist <- vector("list",332)
for (i in id ){
datalist[[i]]<-read.csv(files[[i]])
judge<- is.na(datalist[[i]][["sulfate"]]) | is.na(datalist[[i]][["nitrate"]])
if (!judge) nobs[i]<- datalist[[i]]
}
data.frame(id,nobs)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
files <- list.files(directory,full.names=TRUE)
nobs <- vector("integer",length(id))
datalist <- vector("list",332)
for (i in id ){
datalist[[i]]<-read.csv(files[[i]])
judge<- is.na(datalist[[i]][["sulfate"]]) | is.na(datalist[[i]][["nitrate"]])
nobs[i]<-sum(!judge)
}
data.frame(id,nobs)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
files <- list.files(directory,full.names=TRUE)
nobs <- vector("integer",length(id))
datalist <- vector("list",332)
j<-1
for (i in id ){
datalist[[i]]<-read.csv(files[[i]])
judge<- is.na(datalist[[i]][["sulfate"]]) | is.na(datalist[[i]][["nitrate"]])
nobs[j]<-sum(!judge)
j <- j+1
}
data.frame(id,nobs)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
a<- complete("specdata",25:30)
as.list(a)
as.data.frame(a)
names(a)
names(a)<-c("a","b")
a
a$a
a[a]
a["a"]
a[["a"]]
class(a["a"])
class(a[["a"]])
a$a
rownames(a)
a["a"]$1
a["a"][1]
a["a"][[2]]
a["a"]
a["a"][["2"]]
a["a"]["2"]
b<- c(1,2)
b
b[1]
b[[1]]
b$1
a[["a"]][1]
a[["a"]][2]
a["a"]
a["a"][1]
a["a"][2]
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
setwd("C:/Users/ly/ProgrammingAssignment2")
?solve
solve(1,2)
matrix (1:4,2,2)
a  <- matrix (1:4,2,2)
solve(a)
?message
message("fuck")
?return
?substitude
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
a  <- rnorm(100)
cachemean (makeVector,a)
str(x)
str(a)
makeVector(a)
x <- makeVector(a)
cachemean(x)
cachemean(x,a)
cachemean(x)
cachemean(x,a)
?mean
?solve
